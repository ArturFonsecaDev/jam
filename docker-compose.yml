services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
        image: base/app
        container_name: app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        networks:
            - laravel
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
        environment:
            - "DB_CONNECTION=pgsql"
            - "DB_HOST=postgres"
            - "DB_PORT=5432"
            - "DB_DATABASE=${DB_DATABASE}"
            - "DB_USERNAME=${DB_USERNAME}"
            - "DB_PASSWORD=${DB_PASSWORD}"
            - "REDIS_HOST=redis"
            - "MAIL_HOST=mailpit"
            - "BROADCAST_CONNECTION=reverb"
            - "REVERB_SERVER_HOST=reverb"
            - "REVERB_SERVER_PORT=9090"
            - "XDEBUG_MODE=debug"
            - "XDEBUG_CONFIG=client_host=host.docker.internal"
        extra_hosts:
            - "host.docker.internal:host-gateway"

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel
        depends_on:
            - app
            - node

    postgres:
        image: postgres:15-alpine
        container_name: postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}"]
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - laravel

    redis:
        image: redis/redis-stack-server:latest
        container_name: redis
        restart: unless-stopped
        networks:
            - laravel

    mailpit:
        image: axllent/mailpit
        container_name: mailpit
        restart: unless-stopped
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - laravel

    node:
        build:
            context: .
            dockerfile: docker/node/Dockerfile
        container_name: node
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        networks:
            - laravel

    scheduler:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        image: base/app
        container_name: scheduler
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        command: [ "sh", "-c", "while [ true ]; do php artisan schedule:run --no-ansi -q; sleep 60; done" ]
        networks:
            - laravel
        depends_on:
            - app

    queue:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        image: base/app
        container_name: queue
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        command: [ "php", "artisan", "horizon" ]
        networks:
            - laravel
        depends_on:
            - app

    reverb:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        image: base/app
        container_name: reverb
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        command: [ "php", "artisan", "reverb:start", "--host=0.0.0.0", "--port=9090", "--debug"]
        ports:
            - "9090:9090"
        networks:
            - laravel
        depends_on:
            - app

volumes:
    pgdata:
    node_modules:

networks:
    laravel:
        driver: bridge
